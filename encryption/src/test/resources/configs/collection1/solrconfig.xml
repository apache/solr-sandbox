<?xml version="1.0" ?>

<!--
 Licensed to the Apache Software Foundation (ASF) under one or more
 contributor license agreements.  See the NOTICE file distributed with
 this work for additional information regarding copyright ownership.
 The ASF licenses this file to You under the Apache License, Version 2.0
 (the "License"); you may not use this file except in compliance with
 the License.  You may obtain a copy of the License at

     http://www.apache.org/licenses/LICENSE-2.0

 Unless required by applicable law or agreed to in writing, software
 distributed under the License is distributed on an "AS IS" BASIS,
 WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 See the License for the specific language governing permissions and
 limitations under the License.
-->

<!-- Minimal solrconfig.xml with /select, /admin and /update only -->

<config>

  <dataDir>${solr.data.dir:}</dataDir>

  <directoryFactory name="DirectoryFactory"
                    class="org.apache.solr.encryption.EncryptionDirectoryFactory">
    <str name="keySupplierFactory">org.apache.solr.encryption.TestingKeySupplier$Factory</str>
    <str name="encrypterFactory">org.apache.solr.encryption.crypto.LightAesCtrEncrypter$Factory</str>
  </directoryFactory>

  <schemaFactory class="ClassicIndexSchemaFactory"/>

  <luceneMatchVersion>${tests.luceneMatchVersion:LATEST}</luceneMatchVersion>

  <!-- EncryptionUpdateHandler transfers the encryption key ids from a commit to the next. -->
  <updateHandler class="org.apache.solr.encryption.EncryptionUpdateHandler">
    <commitWithin>
      <softCommit>${solr.commitwithin.softcommit:true}</softCommit>
    </commitWithin>
    <updateLog class="${solr.ulog:solr.UpdateLog}"></updateLog>
  </updateHandler>

  <requestHandler name="/select" class="solr.SearchHandler">
    <lst name="defaults">
      <str name="echoParams">explicit</str>
      <str name="indent">true</str>
      <str name="df">text</str>
    </lst>
  </requestHandler>

  <!-- Encryption handler -->
  <requestHandler name="/admin/encrypt" class="org.apache.solr.encryption.TestingEncryptionRequestHandler"/>

  <indexConfig>
    <mergeScheduler class="${solr.mscheduler:org.apache.lucene.index.ConcurrentMergeScheduler}"/>

    <!-- Chain of MergePolicy factories:
         - EncryptionMergePolicy detects when a force-merge is triggered with a special max
           number of segments equal to Integer.MAX_VALUE, in this case it merges (rewrites) individually
           each segment which is not encrypted with the latest active key id.
         - TieredMergePolicy is the standard merge policy.
    -->
    <mergePolicyFactory class="org.apache.solr.encryption.EncryptionMergePolicyFactory">
      <str name="wrapped.prefix">delegate</str>
      <str name="delegate.class">org.apache.solr.index.TieredMergePolicyFactory</str>
    </mergePolicyFactory>

  </indexConfig>
</config>
