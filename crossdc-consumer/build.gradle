/*
 * Licensed to the Apache Software Foundation (ASF) under one or more
 * contributor license agreements.  See the NOTICE file distributed with
 * this work for additional information regarding copyright ownership.
 * The ASF licenses this file to You under the Apache License, Version 2.0
 * (the "License"); you may not use this file except in compliance with
 * the License.  You may obtain a copy of the License at
 *
 *     http://www.apache.org/licenses/LICENSE-2.0
 *
 * Unless required by applicable law or agreed to in writing, software
 * distributed under the License is distributed on an "AS IS" BASIS,
 * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
 * See the License for the specific language governing permissions and
 * limitations under the License.
 */
plugins {
    id 'application'
}

description = 'Cross-DC Consumer package'

repositories {
    mavenCentral()
}

application {
    mainClass = 'org.apache.solr.crossdc.consumer.Consumer'
}

dependencies {
    implementation group: 'org.apache.solr', name: 'solr-solrj', version: '8.11.2'
    implementation project(path: ':crossdc-commons', configuration: 'shadow')

    implementation 'io.dropwizard.metrics:metrics-core:4.2.17'
    implementation 'org.slf4j:slf4j-api:2.0.5'
    implementation 'org.eclipse.jetty:jetty-http:9.4.41.v20210516'
    implementation 'org.eclipse.jetty:jetty-server:9.4.41.v20210516'
    implementation group: 'org.apache.logging.log4j', name: 'log4j-api', version: '2.20.0' // log4j impl can use StackLocatorUtil which is in the api jar
    implementation 'org.eclipse.jetty:jetty-servlet:9.4.41.v20210516'
    implementation 'org.apache.logging.log4j:log4j-slf4j-impl:2.20.0'
    testImplementation project(path: ':crossdc-commons')
    testImplementation project(path: ':crossdc-commons')
    runtimeOnly ('com.google.protobuf:protobuf-java-util:3.22.2')
    runtimeOnly ('commons-codec:commons-codec:1.15')
    testImplementation 'org.hamcrest:hamcrest:2.2'
    testImplementation 'junit:junit:4.13.2'
    testImplementation('org.mockito:mockito-inline:5.2.0')

    testImplementation  project(':crossdc-producer')

    testImplementation group: 'org.apache.solr', name: 'solr-core', version: '8.11.2', {
        exclude group: "org.apache.logging.log4j", module: "*"
        exclude group: "org.slf4j", module: "*"
        exclude group: "org.eclipse.jetty", module: "jetty-http"
        exclude group: "org.eclipse.jetty", module: "jetty-server"
        exclude group: "org.eclipse.jetty", module: "jetty-servlet"
    }
    testImplementation group: 'org.apache.solr', name: 'solr-test-framework', version: '8.11.2', {
        exclude group: "org.apache.logging.log4j", module: "*"
        exclude group: "org.slf4j", module: "*"
    }
    implementation 'org.apache.kafka:kafka_2.13:2.8.1'
    implementation 'org.apache.kafka:kafka-streams:2.8.1'
    testImplementation 'org.apache.kafka:kafka_2.13:2.8.1:test'
    testImplementation 'org.apache.kafka:kafka-streams:2.8.1:test'
}

test {
    jvmArgs '-Djava.security.egd=file:/dev/./urandom'
    minHeapSize = "128m"
    maxHeapSize = "512m"
}

tasks.withType(Tar){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}
tasks.withType(Zip){
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}